//
//  WMOrderViewController.swift
//  Wingman
//
//  Created by Kraisorn Soisakhu on 5/17/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit
import SVProgressHUD

protocol WMOrderViewControllerInput {
    
}

protocol WMOrderViewControllerOutput {
    func confirmOrder(request: WMOrderScene.ConfirmOrder.Request)
}

enum WMOrderSection: Int, CaseIterable {
    case orderItems = 0
    case sumTotal
    case address
}

class WMOrderViewController: UIViewController, WMOrderViewControllerInput {
    
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            self.configTableView()
        }
    }
    
    var output: WMOrderViewControllerOutput?
    var router: WMOrderRouter?
    
    private var orderAddress: String?
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        WMOrderConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        self.tableView.reloadData()
    }
    
    private func configTableView() {
        self.tableView.register(OrderViewCell.nib, forCellReuseIdentifier: OrderViewCell.identifier)
        self.tableView.register(OrderTotalViewCell.nib, forCellReuseIdentifier: OrderTotalViewCell.identifier)
        self.tableView.register(OrderAddressViewCell.nib, forCellReuseIdentifier: OrderAddressViewCell.identifier)

        self.tableView.dataSource = self
        
        self.tableView.estimatedRowHeight = 145
        self.tableView.rowHeight = UITableView.automaticDimension
        self.tableView.tableFooterView = UIView()
    }
    
    // MARK: Actions
    @IBAction func doConfirmOrder(_ sender: UIButton) {
        self.requestConfirmOrder()
    }
    
    // MARK: Requests
    func requestConfirmOrder() {
        guard let address = self.orderAddress?.trimmingCharacters(in: .whitespacesAndNewlines), !address.isEmpty else {
            self.showAlert("Order", message: "Please enter your address")
            return
        }
        
        SVProgressHUD.show()
        
        let request = WMOrderScene.ConfirmOrder.Request(address: address)
        self.output?.confirmOrder(request: request)
    }
    
    // MARK: Display logic
    func displayConfirmOrder(viewModel: WMOrderScene.ConfirmOrder.ViewModel) {
        SVProgressHUD.dismiss()
        
        switch viewModel.status {
        case .success:
            self.router?.navigateToOrderSuccess()
            
        case .failure(let title, let message):
            self.showAlert(title, message: message)
        }
    }
}

extension WMOrderViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return WMOrderSection.allCases.count
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        switch WMOrderSection(rawValue: section) {
        case .orderItems:
            return self.router?.dataDestination.orderItems.count ?? 0
        case .sumTotal: return 1
        case .address: return 1
        default: return 0
        }
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch WMOrderSection(rawValue: indexPath.section) {
        case .orderItems:
            guard let cell = tableView.dequeueReusableCell(withIdentifier: OrderViewCell.identifier, for: indexPath) as? OrderViewCell else {
                return UITableViewCell()
            }
            
            if let item = self.router?.dataDestination.orderItems[indexPath.row] {
                cell.setOrderItemInfo(item)
            }
            
            return cell
            
        case .sumTotal:
            guard let cell = tableView.dequeueReusableCell(withIdentifier: OrderTotalViewCell.identifier, for: indexPath) as? OrderTotalViewCell else {
                return UITableViewCell()
            }
            cell.sumTotal.text = "à¸¿ \(WMOrderManager.shared.sumTotalPrice)"
            return cell
            
        case .address:
            guard let cell = tableView.dequeueReusableCell(withIdentifier: OrderAddressViewCell.identifier, for: indexPath) as? OrderAddressViewCell else {
                return UITableViewCell()
            }
            
            cell.addressTextField.delegate = self
            
            return cell
            
        default:
            return UITableViewCell()
        }
    }
}

extension WMOrderViewController: UITextFieldDelegate {
    
    func textFieldDidEndEditing(_ textField: UITextField) {
        self.orderAddress = textField.text
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
}


//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension WMOrderViewController: WMOrderPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
